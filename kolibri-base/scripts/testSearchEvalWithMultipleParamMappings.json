{
  "jobName": "testJob1",
  "requestTasks": 5,
  "fixedParams": {
    "k1": [
      "v1",
      "v2"
    ],
    "k2": [
      "v3"
    ]
  },
  "contextPath": "search",
  "connections": [
    {
      "host": "search-service",
      "port": 80,
      "useHttps": false
    },
    {
      "host": "search-service1",
      "port": 81,
      "useHttps": false
    }
  ],
  "requestParameterPermutateSeq": [
    {
      "key_values": {
        "type": "FROM_ORDERED_VALUES_TYPE",
        "values": {
          "type": "FROM_FILENAME_KEYS_TYPE",
          "directory": "test-paramfiles/queries_for_id",
          "filesSuffix": ".txt",
          "valueName": "id"
        },
        "values_type": "URL_PARAMETER"
      },
      "mapped_values": [
        {
          "type": "FILE_PREFIX_TO_FILE_LINES_TYPE",
          "directory": "test-paramfiles/queries_for_id",
          "files_suffix": ".txt",
          "name": "q",
          "values_type": "URL_PARAMETER"
        },
        {
          "type": "CSV_MAPPING_TYPE",
          "name": "section_id",
          "values_type": "URL_PARAMETER",
          "values": "test-paramfiles/section_for_id/section_for_id.csv",
          "column_delimiter": ";",
          "key_column_index": 0,
          "value_column_index": 1
        },
        {
          "type": "JSON_SINGLE_MAPPINGS_TYPE",
          "name": "section_header",
          "values_type": "HEADER",
          "values": "test-paramfiles/section_headers/section_header_mapping.json"
        }
      ],
      "key_mapping_assignments": [
        [0, 1],
        [0, 2],
        [2, 3]
      ]
    },
    {
      "type": "FROM_ORDERED_VALUES_TYPE",
      "values_type": "URL_PARAMETER",
      "values": {
        "type": "FROM_VALUES_TYPE",
        "name": "a1",
        "values": [
          "0.45",
          "0.32"
        ]
      }
    },
    {
      "type": "FROM_ORDERED_VALUES_TYPE",
      "values_type": "URL_PARAMETER",
      "values": {
        "type": "FROM_RANGE_TYPE",
        "name": "o",
        "start": 0.0,
        "end": 2000.0,
        "stepSize": 1.0
      }
    }
  ],
  "batchByIndex": 0,
  "parsingConfig": {
    "selectors": [
      {
        "name": "productIds",
        "castType": "STRING",
        "selector": "\\ response \\ docs \\\\ product_id"
      },
      {
        "name": "bools",
        "castType": "BOOLEAN",
        "selector": "\\ response \\ docs \\\\ bool"
      }
    ]
  },
  "excludeParamsFromMetricRow": [
    "q", "section_id", "id"
  ],
  "taggingConfiguration": {
    "initTagger": {
      "type": "REQUEST_PARAMETER",
      "parameter": "q",
      "extend": false
    },
    "processedTagger": {
      "type": "NOTHING"
    },
    "resultTagger": {
      "type": "NOTHING"
    }
  },
  "requestTemplateStorageKey": "requestTemplate",
  "mapFutureMetricRowCalculation": {
    "functionType": "IR_METRICS",
    "name": "irMetrics",
    "queryParamName": "q",
    "requestTemplateKey": "requestTemplate",
    "productIdsKey": "productIds",
    "judgementProvider": {
      "type": "FILE_BASED",
      "filename": "test-judgements/test_judgements.txt"
    },
    "metricsCalculation": {
      "metrics": [
        {"name": "DCG_10", "function": {"type": "DCG", "k": 10}},
        {"name": "NDCG_10", "function": {"type": "NDCG", "k": 10}},
        {"name": "PRECISION_4", "function": {"type": "PRECISION", "k": 4, "threshold": 0.1}},
        {"name": "ERR_10", "function": {"type": "ERR", "k": 10}}
      ],
      "judgementHandling": {
        "validations": [
          "EXIST_RESULTS",
          "EXIST_JUDGEMENTS"
        ],
        "handling": "AS_ZEROS"
      }
    },
    "excludeParams": [
      "q", "section_id", "id"
    ]
  },
  "singleMapCalculations": [
    {
      "name": "FIRST_TRUE_BOOL",
      "dataKey": "bools",
      "type": "FIRST_TRUE"
    },
    {
      "name": "COUNT_TRUE_BOOL",
      "dataKey": "bools",
      "type": "TRUE_COUNT"
    }
  ],
  "allowedTimePerElementInMillis": 1000,
  "allowedTimePerBatchInSeconds": 6000,
  "allowedTimeForJobInSeconds": 720000,
  "expectResultsFromBatchCalculations": false,
  "wrapUpFunction": {
    "type": "AGGREGATE_FROM_DIR_BY_REGEX",
    "weightProvider": {
      "type": "CONSTANT",
      "weight": 1.0
    },
    "regex": ".*[(]q=.+[)].*",
    "outputFilename": "(ALL1)",
    "readSubDir": "test-results/testJob1",
    "writeSubDir": "test-results/testJob1"
  }
}