version: '3.5'

services:

  prometheus:
    image: prom/prometheus:v2.28.1
    ports:
      - 9000:9090
    user: "1000:1000"
    volumes:
      - ./prometheus:/etc/prometheus
      # /prometheus is the default data dir
      - ./prometheus/data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana:8.0.5
    volumes:
      - ./grafana:/var/lib/grafana
    ports:
      - 3000:3000
    # user setting needed to be set to owner/group of the volume (above grafana folder on host machine)
    user: "1000:1000"

  kolibri1:
    image: kolibri-base:0.1.0-alpha5
    ports:
      - "8000:8000"
      - "5266:5266"
      - "9095:9095"
    environment:
      JVM_OPTS: >
        -XX:+UseG1GC
        -Xms1024m
        -Xmx4096m
      PROFILE: prod
      ROLES: httpserver
      KAMON_PROMETHEUS_PORT: 9095
      KAMON_STATUSPAGE_PORT: 5266
      CLUSTER_NODE_HOST: kolibri1
      CLUSTER_NODE_PORT: 8001
      HTTP_SERVER_INTERFACE: kolibri1
      HTTP_SERVER_PORT: 8000
      MANAGEMENT_HOST: kolibri1
      MANAGEMENT_PORT: 8558
      MANAGEMENT_BIND_HOSTNAME: '0.0.0.0'
      MANAGEMENT_BIND_PORT: 8558
      CLUSTER_NODE_BIND_HOST: '0.0.0.0'
      CLUSTER_NODE_BIND_PORT: 8001
      DISCOVERY_SERVICE_NAME: kolibri-service
      KOLIBRI_ACTOR_SYSTEM_NAME: KolibriAppSystem
      DISCOVERY_METHOD: config
      REQUEST_PARALLELISM: 16
      USE_CONNECTION_POOL_FLOW: 'false'
      RUNNING_TASK_BASELINE_COUNT: 2
      KOLIBRI_DISPATCHER_PARALLELISM_MIN: 8
      KOLIBRI_DISPATCHER_PARALLELISM_FACTOR: 8.0
      KOLIBRI_DISPATCHER_PARALLELISM_MAX: 32
      KOLIBRI_DISPATCHER_THROUGHPUT: 10
      DEFAULT_DISPATCHER_PARALLELISM_FACTOR: 1.0
      DEFAULT_DISPATCHER_PARALLELISM_MAX: 2
      DEFAULT_DISPATCHER_PARALLELISM_MIN: 1
      HTTP_CLIENT_CONNECTION_TIMEOUT: '5s'
      HTTP_CLIENT_IDLE_TIMEOUT: '10s'
      HTTP_CONNECTION_POOL_MAX_OPEN_REQUESTS: 1024
      HTTP_CONNECTION_POOL_MAX_RETRIES: 3
      HTTP_CONNECTION_POOL_MAX_CONNECTIONS: 1024
      HTTP_CONNECTION_POOL_SUBSCRIPTION_TIMEOUT: '60 seconds'
      USE_RESULT_ELEMENT_GROUPING: 'true'
      RESULT_ELEMENT_GROUPING_COUNT: 2000
      RESULT_ELEMENT_GROUPING_INTERVAL_IN_MS: 1000
      RESULT_ELEMENT_GROUPING_PARALLELISM: 1
      USE_AGGREGATOR_BACKPRESSURE: 'true'
      AGGREGATOR_RECEIVE_PARALLELISM: 32
      MAX_NR_BATCH_RETRIES: 2
      PERSISTENCE_MODE: 'AWS'
      AWS_PROFILE: 'developer'
      AWS_S3_BUCKET: 'kolibri-dev'
      AWS_S3_PATH: 'metric_results'
      AWS_S3_REGION: 'EU_CENTRAL_1'
      LOCAL_STORAGE_DIR: '/app/data'
    volumes:
      - ./kolibri-test:/app/data
#    mem_limit: 4200m

  kolibri2:
    image: kolibri-base:0.1.0-alpha5
    ports:
      - "5267:5267"
      - "9096:9096"
    environment:
      JVM_OPTS: >
        -XX:+UseG1GC
        -Xms1024m
        -Xmx4096m
      PROFILE: prod
      ROLES: compute
      KAMON_PROMETHEUS_PORT: 9096
      KAMON_STATUSPAGE_PORT: 5267
      CLUSTER_NODE_HOST: kolibri2
      CLUSTER_NODE_PORT: 8001
      MANAGEMENT_HOST: kolibri2
      MANAGEMENT_PORT: 8559
      MANAGEMENT_BIND_HOSTNAME: '0.0.0.0'
      MANAGEMENT_BIND_PORT: 8559
      CLUSTER_NODE_BIND_HOST: '0.0.0.0'
      CLUSTER_NODE_BIND_PORT: 8001
      DISCOVERY_SERVICE_NAME: kolibri-service
      KOLIBRI_ACTOR_SYSTEM_NAME: KolibriAppSystem
      DISCOVERY_METHOD: config
      REQUEST_PARALLELISM: 16
      USE_CONNECTION_POOL_FLOW: 'false'
      RUNNING_TASK_BASELINE_COUNT: 2
      KOLIBRI_DISPATCHER_PARALLELISM_MIN: 8
      KOLIBRI_DISPATCHER_PARALLELISM_FACTOR: 8.0
      KOLIBRI_DISPATCHER_PARALLELISM_MAX: 32
      KOLIBRI_DISPATCHER_THROUGHPUT: 10
      DEFAULT_DISPATCHER_PARALLELISM_FACTOR: 1.0
      DEFAULT_DISPATCHER_PARALLELISM_MAX: 2
      DEFAULT_DISPATCHER_PARALLELISM_MIN: 1
      HTTP_CLIENT_CONNECTION_TIMEOUT: '5s'
      HTTP_CLIENT_IDLE_TIMEOUT: '10s'
      HTTP_CONNECTION_POOL_MAX_OPEN_REQUESTS: 1024
      HTTP_CONNECTION_POOL_MAX_RETRIES: 3
      HTTP_CONNECTION_POOL_MAX_CONNECTIONS: 1024
      HTTP_CONNECTION_POOL_SUBSCRIPTION_TIMEOUT: '60 seconds'
      USE_RESULT_ELEMENT_GROUPING: 'true'
      RESULT_ELEMENT_GROUPING_COUNT: 2000
      RESULT_ELEMENT_GROUPING_INTERVAL_IN_MS: 1000
      RESULT_ELEMENT_GROUPING_PARALLELISM: 1
      USE_AGGREGATOR_BACKPRESSURE: 'true'
      AGGREGATOR_RECEIVE_PARALLELISM: 32
      MAX_NR_BATCH_RETRIES: 2
      PERSISTENCE_MODE: 'AWS'
      AWS_PROFILE: 'developer'
      AWS_S3_BUCKET: 'kolibri-dev'
      AWS_S3_PATH: 'metric_results'
      AWS_S3_REGION: 'EU_CENTRAL_1'
      LOCAL_STORAGE_DIR: '/app/data'
    volumes:
      - ./kolibri-test:/app/data
#    mem_limit: 4200m
