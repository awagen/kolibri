akka.io.dns {
    resolver = async-dns
    async-dns.resolv-conf = on
}

akka.remote.artery {
    enabled = on
    transport = tcp
    canonical {
        hostname = 127.0.0.1
        hostname = ${?CLUSTER_NODE_HOST}
        port = 2551
        port = ${?CLUSTER_NODE_PORT}
    }
    bind {
        hostname = 0.0.0.0
        hostname = ${?CLUSTER_NODE_BIND_HOST}
        port = 2551
        port = ${?CLUSTER_NODE_BIND_PORT}
    }
}

# different types of discovery. Since we are within akka-management.yml
# referring to akka.discovery, akka.discovery.method will determine
# which mechanism is used (e.g config, akka-dns,
# kubernetes-api or aws-api-ec2-tag-based)
akka.discovery {
    method = config
    method = ${?DISCOVERY_METHOD}

    config {
      # enough to specifiy a subset of the nodes (note akka-management.conf setting of required nodes),
      # other started nodes will then join the existing cluster
      services {
        kolibri-service { //name should match the name set in akka-management.conf for service-name (https://developer.lightbend.com/docs/akka-management/current/bootstrap/local-config.html)
          endpoints = [
            {
              host = "kolibri1"
              port = 8558 # if set, ports have to be different than the netty.tcp.port setting
            },
            {
              host = "kolibri2"
              port = 8559
            },
            {
              host = "kolibri3"
              port = 8560
            }
          ]
        }
      }
    }

    # configured the akka-dns provider
    akka-dns {
      #class = akka.discovery.dns.DnsSimpleServiceDiscovery
      class = akka.discovery.dns.DnsServiceDiscovery
    }

    kubernetes-api {
        # Namespace discovery path
        #
        # If this path doesn't exist, the namespace will default to "default".
        pod-namespace-path = "/var/run/secrets/kubernetes.io/serviceaccount/namespace"

        # Namespace to query for pods.
        #
        # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
        pod-namespace = "kolibri"

        # Selector value to query pod API with.
        # `%s` will be replaced with the configured effective name, which defaults to the actor system name
        pod-label-selector = "app=%s"
      }


}